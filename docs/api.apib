FORMAT: 1A
HOST: petstore.swagger.io/v2

# Swagger Petstore (1.0.0)

This is a sample server Petstore server.

[Terms of service](http://swagger.io/terms/)

[License: Apache 2.0](http://www.apache.org/licenses/LICENSE-2.0.html)

[Send email to the developer](mailto:apiteam@swagger.io)

Securities defined:
- api_key: apiKey (name: api_key, in: header)
- b: basic

Supported schemes:
- https
- http

# Group pet

> Everything about your Pets

## Add a new pet to the store, Update an existing pet [/pet]

### Add a new pet to the store [post]

`post /pet`

Security: b

+ Request (application/json)

    + Headers

            Authorization: (string, optional) - b, basic

    + Attributes (array[Pet])

    + Body

+ Response 405 (application/xml)

    > Invalid input

    + Body

### Update an existing pet [put]

`put /pet`

+ Request (application/json)

    + Attributes (array[Pet])

    + Body

+ Response 400 (application/xml)

    > Invalid ID supplied

    + Attributes (string)

    + Body

+ Response 404 (application/xml)

    > Pet not found

    + Attributes (string)

    + Body

+ Response 405 (application/xml)

    > Validation exception

    + Attributes (string)

    + Body

## Finds Pets by status [/pet/findByStatus{?status}]

### Finds Pets by status [get]

`get /pet/findByStatus`

> Multiple status values can be provided with comma separated strings

+ Parameters

    + status (array[string], required) - Status values that need to be considered for filter
        (collection format: multi, collection format: multi)

+ Request (application/json)

    + Body

+ Response 200 (application/json)

    > successful operation

    + Attributes (array[Pet])

    + Body

            a

+ Response 400 (application/json)

    > Invalid status value

    + Body

## Finds Pets by tags [/pet/findByTags{?tags}]

### Finds Pets by tags [get]

`get /pet/findByTags`

> Multiple tags can be provided with comma separated strings.

Attention: This api is deprecated.

+ Parameters

    + tags (array[string], required) - Tags to filter by
        (collection format: multi, collection format: multi)

+ Request (application/json)

    + Body

+ Response 200 (application/xml)

    > successful operation

    + Attributes (array[Pet])

    + Body

+ Response 400 (application/xml)

    > Invalid status value

    + Body

# Group store

> Access to Petstore orders

# Group user

> Operations about user

# Data Structures

## Pet (object)

+ id (number, optional)
    (format: int64)
+ category (Category, optional)
+ name: `doggie` (string, required)
+ photoUrls (array[string], required)
+ tags (array[Tag], optional)
+ status (enum[string], optional) - pet status in the store
    + Members
        + `available`
        + `pending`
        + `sold`

## Category (object)

+ id (number, optional)
    (format: int64)
+ name (string, optional)

## Tag (object)

+ id (number, optional)
    (format: int64)
+ name (string, optional)
