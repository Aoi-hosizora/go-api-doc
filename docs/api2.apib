FORMAT: 1A
HOST: api.gistfox.com/

# Gist Fox API (1.0.0)

Gist Fox API is a **pastes service** similar to [GitHub's Gist](http://gist.github.com).

## Authentication
*Gist Fox API* uses OAuth Authorization. First you create a new (or acquire existing) OAuth token using Basic Authentication. After you have acquired your token you can use it to access other resources within token' scope.

## Media Types
Where applicable this API uses the [HAL+JSON](https://github.com/mikekelly/hal_specification/blob/master/hal_specification.md) media-type to represent resources states and affordances.

Requests with a message-body are using plain JSON to set or update resource states.

## Error States
The common [HTTP Response Status Codes](https://github.com/for-GET/know-your-http-well/blob/master/status-codes.md) are used.

# Group Gist

Gist-related resources of *Gist Fox API*.

## Gist [/gists/{id}{?access_token}]

> `/gists/{id}`

A single Gist object. The Gist resource is the central resource in the Gist Fox API. It represents one paste - a single text note.

The Gist resource has the following attributes:

+ id
+ created_at
+ description
+ content

The states *id* and *created_at* are assigned by the Gist Fox API at the moment of creation.

### Retrieve a Single Gist [GET]

> `GET /gists/{id}`

+ Parameters

    + id (string, required) - ID of the Gist in the form of a hash.
    + access_token (string, optional) - Gist Fox API access token.

+ Request (application/json)

    + Body

+ Response 200 (application/hal+json)

    200 OK

    HAL+JSON representation of Gist Resource. In addition to representing its state in the JSON form it offers affordances in the form of the HTTP Link header and HAL links.

    + Headers

            Link: <http:/api.gistfox.com/gists/42>;rel="self", <http:/api.gistfox.com/gists/42/star>;rel="star"

    + Body

            {
                "_links": {
                    "self": { "href": "/gists/42" },
                    "star": { "href": "/gists/42/star" },
                },
                "id": "42",
                "created_at": "2014-04-14T02:15:15Z",
                "description": "Description of Gist",
                "content": "String contents"
            }

### Edit a Gist [PATCH]

> `PATCH /gists/{id}`

To update a Gist send a JSON with updated value for one or more of the Gist resource attributes. All attributes values (states) from the previous version of this Gist are carried over by default if not included in the hash.

+ Parameters

    + id (string, required) - ID of the Gist in the form of a hash.
    + access_token (string, optional) - Gist Fox API access token.

+ Request (application/json)

    + Body

            {
                "content": "Updated file contents"
            }

+ Response 200 (application/hal+json)

    200 OK

    HAL+JSON representation of Gist Resource. In addition to representing its state in the JSON form it offers affordances in the form of the HTTP Link header and HAL links.

    + Headers

            Link: <http:/api.gistfox.com/gists/42>;rel="self", <http:/api.gistfox.com/gists/42/star>;rel="star"

    + Body

            {
                "_links": {
                    "self": { "href": "/gists/42" },
                    "star": { "href": "/gists/42/star" },
                },
                "id": "42",
                "created_at": "2014-04-14T02:15:15Z",
                "description": "Description of Gist",
                "content": "String contents"
            }

### Delete a Gist [DELETE]

> `DELETE /gists/{id}`

+ Parameters

    + id (string, required) - ID of the Gist in the form of a hash.
    + access_token (string, optional) - Gist Fox API access token.

+ Request (application/json)

    + Body

+ Response 204 (application/json)

    204 No Content

    + Body

## Gists Collection [/gists{?since,access_token}]

> `/gists`

Collection of all Gists.

The Gist Collection resource has the following attribute:

+ total

In addition it **embeds** *Gist Resources* in the Gist Fox API.

### List All Gists [GET]

> `GET /gists`

+ Parameters

    + since (string, optional) - Timestamp in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ` Only gists updated at or after this time are returned.
    + access_token (string, optional) - Gist Fox API access token.

+ Request (application/json)

    + Body

+ Response 200 (application/hal+json)

    200 OK

    HAL+JSON representation of Gist Collection Resource. The Gist resources in collections are embedded. Note the embedded Gists resource are incomplete representations of the Gist in question. Use the respective Gist link to retrieve its full representation.

    + Headers

            Link:  <http:/api.gistfox.com/gists>;rel="self"

    + Body

            {
                "_links": {
                    "self": { "href": "/gists" }
                },
                "_embedded": {
                    "gists": [
                        {
                            "_links" : {
                                "self": { "href": "/gists/42" }
                            },
                            "id": "42",
                            "created_at": "2014-04-14T02:15:15Z",
                            "description": "Description of Gist"
                        }
                    ]
                },
                "total": 1
            }

### Create a Gist [POST]

> `POST /gists`

To create a new Gist simply provide a JSON hash of the *description* and *content* attributes for the new Gist.

This action requires an `access_token` with `gist_write` scope.

+ Parameters

    + since (string, optional) - Timestamp in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ` Only gists updated at or after this time are returned.
    + access_token (string, optional) - Gist Fox API access token.

+ Request (application/json)

    + Body

            {
                "description": "Description of Gist",
                "content": "String content"
            }

+ Response 201 (application/hal+json)

    201 Created

    HAL+JSON representation of Gist Resource. In addition to representing its state in the JSON form it offers affordances in the form of the HTTP Link header and HAL links.

    + Headers

            Link: <http:/api.gistfox.com/gists/42>;rel="self", <http:/api.gistfox.com/gists/42/star>;rel="star"

    + Body

            {
                "_links": {
                    "self": { "href": "/gists/42" },
                    "star": { "href": "/gists/42/star" },
                },
                "id": "42",
                "created_at": "2014-04-14T02:15:15Z",
                "description": "Description of Gist",
                "content": "String contents"
            }

## Star [/gists/{id}/star{?access_token}]

> `/gists/{id}/star`

Star resource represents a Gist starred status.

The Star resource has the following attribute:

+ starred

### Star a Gist [PUT]

> `PUT /gists/{id}/star`

This action requires an `access_token` with `gist_write` scope.

+ Parameters

    + id (string, required) - ID of the gist in the form of a hash
    + access_token (string, optional) - Gist Fox API access token

+ Request (application/json)

    + Body

+ Response 204 (application/hal+json)

    204 No Content

    + Body

### Unstar a Gist [DELETE]

> `DELETE /gists/{id}/star`

This action requires an `access_token` with `gist_write` scope.

+ Parameters

    + id (string, required) - ID of the gist in the form of a hash
    + access_token (string, optional) - Gist Fox API access token

+ Request (application/json)

    + Body

+ Response 204 (application/hal+json)

    204 No Content

    + Body

### Check if a Gist is Starred [GET]

> `GET /gists/{id}/star`

+ Parameters

    + id (string, required) - ID of the gist in the form of a hash
    + access_token (string, optional) - Gist Fox API access token

+ Request (application/json)

    + Body

+ Response 200 (application/hal+json)

    200 OK

    HAL+JSON representation of Star Resource.

    + Headers

            Link: <http:/api.gistfox.com/gists/42/star>;rel="self"

    + Body

            {
                "_links": {
                    "self": { "href": "/gists/42/star" },
                },
                "starred": true
            }

# Group Access Authorization and Control

Access and Control of *Gist Fox API* OAuth token.

## Authorization [/authorization]

> `/authorization`

Authorization Resource represents an authorization granted to the user. You can **only** access your own authorization, and only through **Basic Authentication**.

The Authorization Resource has the following attribute:

+ token
+ scopes

Where *token* represents an OAuth token and *scopes* is an array of scopes granted for the given authorization. At this moment the only available scope is `gist_write`.

### Retrieve Authorization [GET]

> `GET /authorization`

+ Request (application/json)

    + Headers

            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==

    + Body

+ Response 200 (application/hal+json)

    200 OK

    + Headers

            Link: <http:/api.gistfox.com/authorizations/1>;rel="self"

    + Body

            {
                "_links": {
                    "self": { "href": "/authorizations" },
                },
                "scopes": [
                    "gist_write"
                ],
                "token": "abc123"
            }

### Create Authorization [POST]

> `POST /authorization`

+ Request (application/json)

    + Headers

            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==

    + Body

            {
                "scopes": [
                    "gist_write"
                ]
            }

+ Response 201 (application/hal+json)

    201 Created

    + Headers

            Link: <http:/api.gistfox.com/authorizations/1>;rel="self"

    + Body

            {
                "_links": {
                    "self": { "href": "/authorizations" },
                },
                "scopes": [
                    "gist_write"
                ],
                "token": "abc123"
            }

### Remove an Authorization [DELETE]

> `DELETE /authorization`

+ Request (application/json)

    + Headers

            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==

    + Body

+ Response 204 (application/json)

    204 No Content

    + Body

# Group Default

## Gist Fox API Root [/]

> `/`

Gist Fox API entry point.

This resource does not have any attributes. Instead it offers the initial API affordances in the form of the HTTP Link header and
HAL links.

### Retrieve the Entry Point [GET]

> `GET /`

+ Request (application/json)

    + Body

+ Response 200 (application/hal+json)

    200 OK

    + Headers

            Link: <http:/api.gistfox.com/>;rel="self",<http:/api.gistfox.com/gists>;rel="gists",<http:/api.gistfox.com/authorization>;rel="authorization"

    + Body

            {
                "_links": {
                    "self": { "href": "/" },
                    "gists": { "href": "/gists?{since}", "templated": true },
                    "authorization": { "href": "/authorization"}
                }
            }

## Test the most difficult operation [/test]

> `/test`

### Test the most difficult operation [POST]

> `POST /test`

[https://apiblueprint.org/documentation/specification.html](https://apiblueprint.org/documentation/specification.html)

+ Request (formData)

    + Attributes (object)

        + query1 (array[string], optional)
            (allow empty value, pattern: /^.+$/, 0 <= len <= 8, 0 <= #items <= 5, unique items, collection format: csv, 0.000 <= val <= 10.000)
        + query2 (number, required)
            (format: double, len >= 0, #items >= 0, val > 0.000, multiple of 3.300)
        + query3 (array[array[number]], required)
            (len <= 8, #items <= 5, val < 10.000)
        + query4 (number, optional) - some desc
            (format: int64, len <= 8, 0.000 < val < 10.000)

    + Body

            {
              "A": 1
            }

+ Response 200 (application/json)

    200 OK

    + Body

# Data Structures
